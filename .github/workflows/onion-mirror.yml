name: Onion Mirror

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'content/**'
      - 'config.yaml'
      - '.github/workflows/onion-mirror.yml'

jobs:
  setup-onion:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y tor nginx
          sudo systemctl stop tor || true
          sudo systemctl stop nginx || true
          tor --version

      - name: Verify System Configuration
        run: |
          if ! id -u debian-tor > /dev/null 2>&1; then
            sudo adduser --system --group --no-create-home debian-tor
          fi
          which tor
          id debian-tor

      - name: Setup Tor Hidden Service
        shell: bash
        env:
          TOR_PRIVATE_KEY: ${{ secrets.TOR_PRIVATE_KEY }}
        run: |
          # Clean up completely
          sudo systemctl stop tor || true
          sudo rm -rf /var/lib/tor
          sudo rm -rf /etc/tor/torrc
          
          # Create fresh directory structure
          sudo install -d -m 755 /var/lib/tor
          sudo chown -R debian-tor:debian-tor /var/lib/tor
          
          # Create hidden service directory
          sudo -u debian-tor install -d -m 700 /var/lib/tor/hidden_service
          
          # Write private key with explicit permissions
          if [ -n "$TOR_PRIVATE_KEY" ]; then
            echo "$TOR_PRIVATE_KEY" | base64 -d | sudo -u debian-tor tee /var/lib/tor/hidden_service/hs_ed25519_secret_key > /dev/null
            sudo -u debian-tor chmod 600 /var/lib/tor/hidden_service/hs_ed25519_secret_key
          else
            echo "TOR_PRIVATE_KEY is not set"
            exit 1
          fi

          # Debug information
          echo "Directory structure:"
          ls -la /var/lib/tor/
          sudo -u debian-tor ls -la /var/lib/tor/hidden_service/

      - name: Configure and Start Tor
        run: |
          # Write fresh torrc
          sudo tee /etc/tor/torrc << 'EOF'
          DataDirectory /var/lib/tor
          HiddenServiceDir /var/lib/tor/hidden_service/
          HiddenServicePort 80 127.0.0.1:8080
          HiddenServiceVersion 3
          Log notice stdout
          RunAsDaemon 0
          EOF
          
          sudo chown -R debian-tor:debian-tor /etc/tor
          sudo chmod 644 /etc/tor/torrc
          
          # Start Tor in the foreground
          echo "Starting Tor..."
          sudo -u debian-tor tor -f /etc/tor/torrc &
          
          # Wait for Tor to start
          sleep 30
          
          # Debug information
          echo "Checking Tor status..."
          pgrep -l tor || echo "Tor not running"
          sudo -u debian-tor ls -la /var/lib/tor/hidden_service/ || echo "Cannot access hidden service directory"

      - name: Configure and Start Nginx
        run: |
          sudo tee /etc/nginx/conf.d/onion_mirror.conf << 'EOF'
          server {
              listen 127.0.0.1:8080;
              server_name _;
              
              location / {
                  proxy_pass https://profincognito.me;
                  proxy_set_header Host profincognito.me;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_ssl_server_name on;
                  proxy_connect_timeout 60s;
                  proxy_read_timeout 60s;
              }
              
              access_log /var/log/nginx/access.tor.log;
              error_log /var/log/nginx/error.tor.log;
          }
          EOF
          
          sudo nginx -t
          sudo nginx

      - name: Verify Onion Service
        env:
          EXPECTED_ONION: ${{ secrets.TOR_ADDRESS }}
        run: |
          # Initial wait
          echo "Waiting 60 seconds for initial Tor setup..."
          sleep 60
          
          ATTEMPTS=0
          MAX_ATTEMPTS=10
          
          while [ ! -f /var/lib/tor/hidden_service/hostname ] && [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
            echo "Waiting for hostname file... (attempt $((ATTEMPTS + 1))/$MAX_ATTEMPTS)"
            sleep 30
            ATTEMPTS=$((ATTEMPTS + 1))
            
            # Debug information at each attempt
            echo "Current directory contents:"
            sudo -u debian-tor ls -la /var/lib/tor/hidden_service/ || echo "Cannot access directory"
            echo "Tor process status:"
            pgrep -l tor || echo "Tor not running"
          done

          if [ -f /var/lib/tor/hidden_service/hostname ]; then
            CURRENT_ONION=$(sudo -u debian-tor cat /var/lib/tor/hidden_service/hostname | tr -d '\n\r')
            echo "Found onion address: ${CURRENT_ONION}"
            
            if [ "$CURRENT_ONION" = "$EXPECTED_ONION" ]; then
              echo "âœ“ Onion service verified"
              echo "Testing connection..."
              curl --socks5-hostname 127.0.0.1:9050 -v "http://${CURRENT_ONION}.onion" || true
            else
              echo "Error: Onion address mismatch!"
              echo "Expected: $EXPECTED_ONION"
              echo "Got: $CURRENT_ONION"
              exit 1
            fi
          else
            echo "Error: Hostname file not found after $MAX_ATTEMPTS attempts"
            echo "Debug information:"
            ps aux | grep tor
            sudo cat /var/log/tor/log || true
            sudo -u debian-tor ls -la /var/lib/tor/hidden_service/
            exit 1
          fi

      - name: Update Hugo Config
        if: success()
        env:
          ONION_URL: ${{ secrets.TOR_ADDRESS }}
        run: |
          sudo apt-get install -y python3-pip
          pip3 install yq
          
          yq eval -i '
            .params.mirrors = (
              .params.mirrors // [] | map(select(.name != "Onion Mirror"))
            ) + [{
              "name": "Onion Mirror",
              "url": strenv(ONION_URL),
              "icon": "tor",
              "info": "Access via Tor Browser"
            }]
          ' config.yaml

      - name: Commit Changes
        if: success()
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          if git diff --exit-code config.yaml; then
            echo "No changes to commit"
          else
            git add config.yaml
            git commit -m "Update Onion mirror address [skip ci]"
            git push
          fi
